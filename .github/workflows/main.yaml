name: Build & Deploy Myapp

on: 
  push:
    branches:
      - main 

jobs:
  build-deploy:
    name: Build And Deploy MyApp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/testpipeline:v1

      - name: Login to Docker Hub 
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/testpipeline:v1

      - name: Install ArgoCD CLI
        run: |
          sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo chmod +x /usr/local/bin/argocd

      - name: Login to ArgoCD 
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        run: |
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure

      - name: Create Argo CD Namespace
        run: |
          kubectl create namespace argocd

      - name: Apply Argo CD manifests
        run: |
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      - name: Wait for Argo CD to be ready
        run: |
          kubectl wait --for=condition=Available deployment -n argocd --timeout=300s -l app.kubernetes.io/name=argocd-server

      - name: Sync ArgoCD Application
        run: |
          argocd app sync helm-app-using-terraform  # Replace 'helm-app-using-terraform' with your Argo CD application name
          argocd app wait helm-app-using-terraform --timeout 300

